<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ContentProvider</name>
    </assembly>
    <members>
        <member name="M:ContentProvider.ContentManager.GetContentSet(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ContentProvider.ContentManager.GetAsString(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ContentProvider.ContentManager.GetAsBinary(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ContentProvider.ContentSet">
            <summary>
                Represents a named set of contents, consisting of a primary content source and zero or more
                fallback sources.
            </summary>
        </member>
        <member name="M:ContentProvider.ContentSet.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:ContentProvider.ContentSet"/> class with the specified
                <paramref name="name"/>.
            </summary>
            <param name="name">The name of the content set.</param>
        </member>
        <member name="P:ContentProvider.ContentSet.Name">
            <summary>
                Gets the name of the content set.
            </summary>
        </member>
        <member name="M:ContentProvider.ContentSet.GetAsString(System.String)">
            <summary>
                Gets a content entry as a string value, given its <paramref name="name"/>.
            </summary>
            <param name="name">The name of the content entry.</param>
            <returns>The string value of the content entry.</returns>
            <exception cref="T:ContentProvider.ContentException">
                Thrown if the content entry is not found in this content set.
            </exception>
        </member>
        <member name="M:ContentProvider.ContentSet.GetAsBinary(System.String)">
            <summary>
                Gets a content entry as a binary value (byte[]), given its <paramref name="name"/>.
            </summary>
            <param name="name">The name of the content entry.</param>
            <returns>The byte[] value of the content entry.</returns>
            <exception cref="T:ContentProvider.ContentException">
                Thrown if the content entry is not found in this content set.
            </exception>
        </member>
        <member name="P:ContentProvider.ContentSet.Sources">
            <summary>
                Gets the list of content sources registered with this content set.
            </summary>
        </member>
        <member name="M:ContentProvider.ContentSource.TryLoadAsString(System.String)">
            <summary>
                Attempts to load an item from the content source as a string, given its
                <paramref name="name"/>.
            </summary>
            <param name="name">The name of the content item to retrieve.</param>
            <returns>
                A tuple indicating whether the content item could be loaded, and if so, the string
                content itself.
            </returns>
        </member>
        <member name="M:ContentProvider.ContentSource.TryLoadAsBinary(System.String)">
            <summary>
                Attempts to load an item from the content source as a byte array, given its
                <paramref name="name"/>.
            </summary>
            <param name="name">The name of the content item to retrieve.</param>
            <returns>
                A tuple indicating whether the content item could be loaded, and if so, the byte
                array content itself.
            </returns>
        </member>
        <member name="T:ContentProvider.ContentSource`1">
            <summary>
                Represents a source from which to retrieve content.
                <para/>
                Examples include assembly embedded resources, files, web sites, etc.
            </summary>
        </member>
        <member name="P:ContentProvider.ContentSourceOptions.NameTransformer">
            <summary>
                Gets or sets an optional delegate that can be used to transform the content source
                item names.
            </summary>
        </member>
        <member name="T:ContentProvider.Errors">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ContentProvider.Errors.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ContentProvider.Errors.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ContentProvider.Errors.ContentEntryNotFound">
            <summary>
              Looks up a localized string similar to Could not find content entry {0} under the {1} content..
            </summary>
        </member>
        <member name="P:ContentProvider.Errors.FilesInvalidBaseDirectory">
            <summary>
              Looks up a localized string similar to Specify a valid base directory..
            </summary>
        </member>
        <member name="P:ContentProvider.Errors.FilesMissingBaseDirectory">
            <summary>
              Looks up a localized string similar to The base directory {0} does not exist..
            </summary>
        </member>
        <member name="P:ContentProvider.Errors.InvalidContentSetName">
            <summary>
              Looks up a localized string similar to Specify a valid name for the content set..
            </summary>
        </member>
        <member name="M:ContentProvider.IContentManager.GetContentSet(System.String)">
            <summary>
                Returns the <see cref="T:ContentProvider.IContentSet"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The content set name.</param>
            <returns>The <see cref="T:ContentProvider.IContentSet"/> instance, if found; otherwise <c>null</c>.</returns>
        </member>
        <member name="M:ContentProvider.IContentManager.GetAsString(System.String,System.String)">
            <summary>
                Gets the value of the content entry named <paramref name="entryName"/> from the content
                set named <paramref name="name"/>, as a string.
            </summary>
            <param name="name">The content set name.</param>
            <param name="entryName">The content entry name.</param>
            <returns>The content value as a string, if found; otherwise <c>null</c>.</returns>
        </member>
        <member name="M:ContentProvider.IContentManager.GetAsBinary(System.String,System.String)">
            <summary>
                Gets the value of the content entry named <paramref name="entryName"/> from the content
                set named <paramref name="name"/>, as a byte array.
            </summary>
            <param name="name">The content set name.</param>
            <param name="entryName">The content entry name.</param>
            <returns>The content value as a byte array, if found; otherwise <c>null</c>.</returns>
        </member>
        <member name="M:ContentProvider.ContentManagerExtensions.GetAsBinary(ContentProvider.IContentManager,System.String,System.String)">
            <summary>
                Gets the value of the content entry named <paramref name="entryName"/> from the content
                set named <paramref name="name"/>, as a byte collection.
            </summary>
            <param name="contentManager">The <see cref="T:ContentProvider.IContentManager"/> instance to get the content from.</param>
            <param name="name">The content set name.</param>
            <param name="entryName">The content entry name.</param>
            <returns>The content value as a byte collection, if found; otherwise <c>null</c>.</returns>
        </member>
    </members>
</doc>
